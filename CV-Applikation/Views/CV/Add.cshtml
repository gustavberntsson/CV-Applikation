@{
    ViewData["Title"] = "Lägg till";
}
@model CV
<form asp-action="Add" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <label class="fw-normal fs-5">CV Namn:</label>
    <input asp-for="CVName" />
    <span asp-validation-for="CVName" class="text-danger"></span>
    <br />
    <div class="form-group">
        <label class="fw-normal fs-5 mt-2" for="ImagePath">Image</label>
        <input type="file" asp-for="ImagePath" class="form-control" />
    </div>

    <div class="container"> 
        
        <!-- Språk -->
        <div class="form-section" id="languagesSection">
            <h3 class="fw-normal fs-5 mt-4">Språk</h3>
            <div id="languagesContainer">
                @for (int i = 0; i < Model.Languages.Count; i++)
                {
                    <div>
                        <label for="Languages[@i].LanguageName">Språk:</label>
                        <input asp-for="Languages[@i].LanguageName" id="Languages[@i].LanguageName" />
                        <br />
                        <label for="Languages[@i].Level">Nivå (1-5):</label>
                        <input asp-for="Languages[@i].Level" id="Languages[@i].Level" type="number" min="1" max="5" />
                        <br />
                    </div>
                }
            </div>
            <button type="button" class="btn" id="addLanguage" style="background-color: rgb(255, 167, 38); border-color: rgb(255, 167, 38); color: white;">Lägg till nytt språk</button>
        </div>

        <!-- Utbildning -->
        <div class="form-section" id="educationsSection">
            <h3 class="fw-normal fs-5 mt-4">Utbildning</h3>
            <div id="educationsContainer">
                @for (int i = 0; i < Model.Educations.Count; i++)
                {
                    <div>
                        <label for="Educations[@i].School">Skola:</label>
                        <input asp-for="Educations[@i].School" id="Educations[@i].School" />
                        <br />
                        <label for="Educations[@i].Degree">Examen:</label>
                        <input asp-for="Educations[@i].Degree" id="Educations[@i].Degree" />
                        <br />
                        <label for="Educations[@i].FieldOfStudy">Ämnesområde:</label>
                        <input asp-for="Educations[@i].FieldOfStudy" id="Educations[@i].FieldOfStudy" />
                        <br />
                        <label for="Educations[@i].StartDate">Startdatum:</label>
                        <input asp-for="Educations[@i].StartDate" id="Educations[@i].StartDate" />
                        <br />
                        <label for="Educations[@i].EndDate">Slutdatum:</label>
                        <input asp-for="Educations[@i].EndDate" id="Educations[@i].EndDate" />
                        <br />
                    </div>
                }
            </div>
            <button type="button" class="btn" id="addEducation" style="background-color: rgb(255, 167, 38); border-color: rgb(255, 167, 38); color: white;">Lägg till ny utbildning</button>
        </div>
    </div>

    <div class="container" >
        <!-- Arbetslivserfarenhet -->
        <div class="form-section" id="workExperienceSection">
            <h3 class="fw-normal fs-5 mt-2">Arbetslivserfarenhet</h3>
            <div id="workExperiencesContainer">
                @for (int i = 0; i < Model.WorkExperiences.Count; i++)
                {
                    <div>
                        <label for="WorkExperiences[@i].CompanyName">Företag:</label>
                        <input asp-for="WorkExperiences[@i].CompanyName" id="WorkExperiences[@i].CompanyName" />
                        <br />
                        <label for="WorkExperiences[@i].Position">Position:</label>
                        <input asp-for="WorkExperiences[@i].Position" id="WorkExperiences[@i].Position" />
                        <br />
                        <label for="WorkExperiences[@i].Description">Beskrivning:</label>
                        <input asp-for="WorkExperiences[@i].Description" id="WorkExperiences[@i].Description" />
                        <br />
                        <label for="WorkExperiences[@i].StartDate">Startdatum:</label>
                        <input asp-for="WorkExperiences[@i].StartDate" id="WorkExperiences[@i].StartDate" />
                        <br />
                        <label for="WorkExperiences[@i].EndDate">Slutdatum:</label>
                        <input asp-for="WorkExperiences[@i].EndDate" id="WorkExperiences[@i].EndDate" />
                        <br />
                    </div>
                }
            </div>
            <button type="button" class="btn" id="addWorkExperience" style="background-color: rgb(255, 167, 38); border-color: rgb(255, 167, 38); color: white;">Lägg till ny arbetslivserfarenhet</button>
        </div>

        <!-- Färdigheter -->
        <div class="form-section" id="skillsSection">
            <h3 class="fw-normal fs-5 mt-2">Färdigheter</h3>
            <div id="skillsContainer">
                @for (int i = 0; i < Model.Skills.Count; i++)
                {
                    <div>
                        <label for="Skills[@i].SkillName">Färdighet:</label>
                        <input asp-for="Skills[@i].SkillName" id="Skills[@i].SkillName" />
                        <br />
                    </div>
                }
            </div>
            <button type="button" class="btn" id="addSkill" style="background-color: rgb(255, 167, 38); border-color: rgb(255, 167, 38); color: white;">Lägg till ny färdighet</button>
        </div>
    </div>

    <br />
    <div class="form-group">
        <label class="fw-normal fs-5" for="IsPrivate">Synlighet</label>
        <select class="form-control" id="IsPrivate" name="IsPrivate">
            <option value="false">Offentligt</option>
            <option value="true">Privat</option>
        </select>
    </div>
    <br />
    <button type="submit" class="btn" style="background-color: rgb(255, 167, 38); border-color: rgb(255, 167, 38); color: white;">Lägg till CV</button>
</form>

<style>

    .container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    gap: 20px;
}

.form-section {
    flex: 1;
    min-width: 300px; /* Gör varje sektion minsta bredd för att hålla saker på en rad när det behövs */
}

.input-row {
    display: flex;
    flex-direction: column;
    margin-bottom: 10px;
}

.remove-button {
    background-color: #ff4444;
    color: white;
    border: none;
    padding: 5px 10px;
    border-radius: 4px;
    cursor: pointer;
}

.remove-button:hover {
    background-color: #cc0000;
}

.btn {
    background-color: rgb(255, 167, 38);
    border-color: rgb(255, 167, 38);
    color: white;
}

 (max-width: 768px) /*{
    .container {
        flex-direction: column; 
    }

    .form-section {
        flex: 1 100%;
    }
}*/

   /* .flex-container {
        display: flex;
        gap: 30px; 
        justify-content: space-between;
    }

    .section /*{
        flex: 1; 
    }*/

    .input-row {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 10px;
    }

    .remove-button {
        background-color: #ff4444;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 4px;
        cursor: pointer;
    }

    .remove-button:hover {
        background-color: #cc0000;
    }
</style>


<script>
    function hasValue(value) {
        return value != null && value.trim() !== '';
    }

    function validateSection(containerId, addButtonId, requiredFields = []) {
        const container = document.getElementById(containerId);
        const sections = container.children;
        const addButton = document.getElementById(addButtonId);

        if (sections.length > 0) {
            const lastSection = sections[sections.length - 1];
            const inputs = lastSection.getElementsByTagName('input');

            // Om requiredFields är tom, kontrollera alla fält
            const fieldsToCheck = requiredFields.length > 0 ?
                Array.from(inputs).filter(input => requiredFields.some(field => input.id.includes(field))) :
                Array.from(inputs);

            const allFieldsHaveValue = fieldsToCheck.every(input => hasValue(input.value));
            addButton.disabled = !allFieldsHaveValue;
        }
    }

    function createRemoveButton() {
        return `<button type="button" class="remove-button" onclick="removeSection(this)">Ta bort</button>`;
    }

    function removeSection(button) {
        const section = button.closest('div');
        const container = section.parentElement;
        const addButtonId = container.id.replace('Container', '');
        section.remove();
        validateSection(container.id, 'add' + addButtonId);
    }

    // Språk
    document.getElementById("addLanguage").addEventListener("click", function () {
        let container = document.getElementById("languagesContainer");
        let index = container.children.length;
        let newLanguage = document.createElement('div');
        newLanguage.innerHTML = `
        <div class="input-row">
            <label for="Languages[${index}].LanguageName">Språk:</label>
            <input name="Languages[${index}].LanguageName" id="Languages[${index}].LanguageName" onchange="validateSection('languagesContainer', 'addLanguage', ['LanguageName'])" />
            <label for="Languages[${index}].Level">Nivå (1-5):</label>
            <input type="number" min="1" max="5" name="Languages[${index}].Level" id="Languages[${index}].Level" onchange="validateSection('languagesContainer', 'addLanguage', ['LanguageName'])" />
            ${createRemoveButton()}
        </div>`;
        container.appendChild(newLanguage);
        document.getElementById('addLanguage').disabled = true;
    });

    // Utbildning
    document.getElementById("addEducation").addEventListener("click", function () {
        let container = document.getElementById("educationsContainer");
        let index = container.children.length;
        let newEducation = document.createElement('div');
        newEducation.innerHTML = `
        <div class="input-row">
            <label for="Educations[${index}].School">Skola:</label>
            <input name="Educations[${index}].School" id="Educations[${index}].School" onchange="validateSection('educationsContainer', 'addEducation', ['School'])" />
            <label for="Educations[${index}].Degree">Examen:</label>
            <input name="Educations[${index}].Degree" id="Educations[${index}].Degree" onchange="validateSection('educationsContainer', 'addEducation', ['School'])" />
            <label for="Educations[${index}].FieldOfStudy">Ämnesområde:</label>
            <input name="Educations[${index}].FieldOfStudy" id="Educations[${index}].FieldOfStudy" onchange="validateSection('educationsContainer', 'addEducation', ['School'])" />
            <label for="Educations[${index}].StartDate">Startdatum:</label>
            <input type="date" name="Educations[${index}].StartDate" id="Educations[${index}].StartDate" onchange="validateSection('educationsContainer', 'addEducation', ['School'])" />
            <label for="Educations[${index}].EndDate">Slutdatum:</label>
            <input type="date" name="Educations[${index}].EndDate" id="Educations[${index}].EndDate" onchange="validateSection('educationsContainer', 'addEducation', ['School'])" />
            ${createRemoveButton()}
        </div>`;
        container.appendChild(newEducation);
        document.getElementById('addEducation').disabled = true;
    });

    // Arbetslivserfarenhet
    document.getElementById("addWorkExperience").addEventListener("click", function () {
        let container = document.getElementById("workExperiencesContainer");
        let index = container.children.length;
        let newExperience = document.createElement('div');
        newExperience.innerHTML = `
        <div class="input-row">
            <label for="WorkExperiences[${index}].CompanyName">Företag:</label>
            <input name="WorkExperiences[${index}].CompanyName" id="WorkExperiences[${index}].CompanyName" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName'])" />
            <label for="WorkExperiences[${index}].Position">Position:</label>
            <input name="WorkExperiences[${index}].Position" id="WorkExperiences[${index}].Position" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName'])" />
            <label for="WorkExperiences[${index}].Description">Beskrivning:</label>
            <input name="WorkExperiences[${index}].Description" id="WorkExperiences[${index}].Description" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName'])" />
            <label for="WorkExperiences[${index}].StartDate">Startdatum:</label>
            <input type="date" name="WorkExperiences[${index}].StartDate" id="WorkExperiences[${index}].StartDate" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName'])" />
            <label for="WorkExperiences[${index}].EndDate">Slutdatum:</label>
            <input type="date" name="WorkExperiences[${index}].EndDate" id="WorkExperiences[${index}].EndDate" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName'])" />
            ${createRemoveButton()}
        </div>`;
        container.appendChild(newExperience);
        document.getElementById('addWorkExperience').disabled = true;
    });

    // Färdigheter
    document.getElementById("addSkill").addEventListener("click", function () {
        let container = document.getElementById("skillsContainer");
        let index = container.children.length;
        let newSkill = document.createElement('div');
        newSkill.innerHTML = `
        <div class="input-row">
            <label for="Skills[${index}].SkillName">Färdighet:</label>
            <input name="Skills[${index}].SkillName" id="Skills[${index}].SkillName" onchange="validateSection('skillsContainer', 'addSkill', ['SkillName'])" />
            ${createRemoveButton()}
        </div>`;
        container.appendChild(newSkill);
        document.getElementById('addSkill').disabled = true;
    });

    // Initiera validering för alla sektioner vid start
    document.addEventListener('DOMContentLoaded', function() {
        validateSection('languagesContainer', 'addLanguage', ['LanguageName']);
        validateSection('educationsContainer', 'addEducation', ['School']);
        validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName']);
        validateSection('skillsContainer', 'addSkill', ['SkillName']);
    });
</script>