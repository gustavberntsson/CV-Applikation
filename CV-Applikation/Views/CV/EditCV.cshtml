@model CV_Applikation.Models.EditCvViewModel

@{
    ViewData["Title"] = "Edit CV";
}

<form asp-controller="CV" asp-action="EditCV" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" name="CVId" value="@Model.CVId" />

    <h1>Redigera CV</h1>

    <!-- CV-namn -->
    <label for="CVName">CV Namn:</label>
    <input asp-for="CVName" id="CVName" />
    <span asp-validation-for="CVName" class="text-danger"></span>
    <br />
    <h3>Bild för cv: </h3>
    <input type="file" asp-for="ImagePath" />
    <br />
    <!-- Utbildningar -->
    <h3>Utbildningar</h3>
    <div id="educationsContainer">
        @for (int i = 0; i < Model.Educations.Count; i++)
        {
            <div class="education">
                <!-- Dolt fält för ID -->
                <input type="hidden" asp-for="Educations[@i].Id" />

                <label for="Educations[@i].School">Skola:</label>
                <input asp-for="Educations[@i].School" id="Educations[@i].School" />
                <span asp-validation-for="Educations[@i].School" class="text-danger"></span>

                <br />

                <label for="Educations[@i].Degree">Examen:</label>
                <input asp-for="Educations[@i].Degree" id="Educations[@i].Degree" />
                <span asp-validation-for="Educations[@i].Degree" class="text-danger"></span>
                <br />

                <label for="Educations[@i].FieldOfStudy">Ämnesområde:</label>
                <input asp-for="Educations[@i].FieldOfStudy" id="Educations[@i].FieldOfStudy" />
                <span asp-validation-for="Educations[@i].FieldOfStudy" class="text-danger"></span>
                <br />

                <label for="Educations[@i].StartDate">Startdatum:</label>
                <input type="date" asp-for="Educations[@i].StartDate" id="Educations[@i].StartDate" />
                <span asp-validation-for="Educations[@i].StartDate" class="text-danger"></span>
                <br />

                <label for="Educations[@i].EndDate">Slutdatum:</label>
                <input type="date" asp-for="Educations[@i].EndDate" id="Educations[@i].EndDate" />
                <span asp-validation-for="Educations[@i].EndDate" class="text-danger"></span>
                <br />
                <hr />
            </div>
        }
    </div>
    <button type="button" id="addEducation">Lägg till ny utbildning</button>
    <br />

    <!-- Arbetslivserfarenheter -->
    <h3>Arbetslivserfarenheter</h3>
    <div id="workExperiencesContainer">
        @for (int i = 0; i < Model.WorkExperiences.Count; i++)
        {
            <div class="work-experience">
                <!-- Dolt fält för ID -->
                <input type="hidden" asp-for="WorkExperiences[@i].Id" />

                <label for="WorkExperiences[@i].CompanyName">Företagsnamn:</label>
                <input asp-for="WorkExperiences[@i].CompanyName" id="WorkExperiences[@i].CompanyName" />
                <span asp-validation-for="WorkExperiences[@i].CompanyName" class="text-danger"></span>
                <br />

                <label for="WorkExperiences[@i].Position">Position:</label>
                <input asp-for="WorkExperiences[@i].Position" id="WorkExperiences[@i].Position" />
                <span asp-validation-for="WorkExperiences[@i].Position" class="text-danger"></span>
                <br />

                <label for="WorkExperiences[@i].Description">Beskrivning:</label>
                <textarea asp-for="WorkExperiences[@i].Description" id="WorkExperiences[@i].Description"></textarea>
                <span asp-validation-for="WorkExperiences[@i].Description" class="text-danger"></span>
                <br />

                <label for="WorkExperiences[@i].StartDate">Startdatum:</label>
                <input type="date" asp-for="WorkExperiences[@i].StartDate" id="WorkExperiences[@i].StartDate" />
                <span asp-validation-for="WorkExperiences[@i].StartDate" class="text-danger"></span>
                <br />

                <label for="WorkExperiences[@i].EndDate">Slutdatum:</label>
                <input type="date" asp-for="WorkExperiences[@i].EndDate" id="WorkExperiences[@i].EndDate" />
                <span asp-validation-for="WorkExperiences[@i].EndDate" class="text-danger"></span>
                <br />
                <hr />
            </div>
        }
    </div>
    <button type="button" id="addWorkExperience">Lägg till ny arbetslivserfarenhet</button>
    <br />

    <!-- Språk -->
    <h3>Språk</h3>
    <div id="languagesContainer">
        @for (int i = 0; i < Model.Languages.Count; i++)
        {
            <div class="language">
                <!-- Dolt fält för ID -->
                <input type="hidden" asp-for="Languages[@i].Id" />

                <label for="Languages[@i].LanguageName">Språk:</label>
                <input asp-for="Languages[@i].LanguageName" id="Languages[@i].LanguageName" />
                <span asp-validation-for="Languages[@i].LanguageName" class="text-danger"></span>
                <br />

                <label for="Languages[@i].Level">Nivå:</label>
                @* <input asp-for="Languages[@i].Level" id="Languages[@i].Level" /> *@
                @* <input type="text" asp-for="Languages[@i].Level" id="Languages[@i].Level" /> *@
                <input type="number" asp-for="Languages[@i].Level" id="Languages[@i].Level" min="1" max="5" />
                <span asp-validation-for="Languages[@i].Level" class="text-danger"></span>
                <br />
                <hr />
            </div>
        }
    </div>
    <button type="button" id="addLanguage">Lägg till nytt språk</button>
    <br />

    <!-- Färdigheter -->
    <h3>Färdigheter</h3>
    <div id="skillsContainer">
        @for (int i = 0; i < Model.Skills.Count; i++)
        {
            <div class="skill">
                <!-- Dolt fält för ID -->
                <input type="hidden" asp-for="Skills[@i].Id" />

                <label for="Skills[@i].SkillName">Färdighet:</label>
                <input asp-for="Skills[@i].SkillName" id="Skills[@i].SkillName" />
                <span asp-validation-for="Skills[@i].SkillName" class="text-danger"></span>

                <br />
                <hr />
            </div>
        }
    </div>
    <button type="button" id="addSkill">Lägg till ny färdighet</button>
    <br />

    <!-- Submit -->
    <button type="submit">Spara ändringar</button>
</form>

<script>
    function hasValue(value) {
        return value !== undefined && value !== null && value.trim() !== '';
    }

    function validateSection(containerId, addButtonId, requiredFields = []) {
        const container = document.getElementById(containerId);
        const sections = container.children;
        const addButton = document.getElementById(addButtonId);

        if (sections.length > 0) {
            const lastSection = sections[sections.length - 1];
            const inputs = lastSection.getElementsByTagName('input');

            // Om requiredFields är tom, kontrollera alla fält
            const fieldsToCheck = requiredFields.length > 0 ?
                Array.from(inputs).filter(input => requiredFields.some(field => input.id.includes(field))) :
                Array.from(inputs);

            const allFieldsHaveValue = fieldsToCheck.every(input => hasValue(input.value));

            // Uppdatera knappens tillstånd
            addButton.disabled = !allFieldsHaveValue;
        }
    }

    function createRemoveButton() {
        return `<button type="button" class="remove-button" onclick="removeSection(this)">Ta bort</button>`;
    }

    function removeSection(button) {
        const section = button.closest('div');
        const container = section.parentElement;
        const addButtonId = container.id.replace('Container', '');
        section.remove();
        validateSection(container.id, 'add' + addButtonId);
    }

    // Lägg till eventlyssnare för alla inputfält
    document.addEventListener('DOMContentLoaded', function () {
        // Validera sektioner vid sidladdning
        validateSection('languagesContainer', 'addLanguage', ['LanguageName']);
        validateSection('educationsContainer', 'addEducation', ['School']);
        validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName']);
        validateSection('skillsContainer', 'addSkill', ['SkillName']);

        // Lägg till eventlyssnare för alla inputfält för att trigga validering vid ändring
        document.querySelectorAll("input").forEach(input => {
            input.addEventListener("input", function() {
                // Här anropas validateSection för alla containers som finns
                validateSection('languagesContainer', 'addLanguage', ['LanguageName']);
                validateSection('educationsContainer', 'addEducation', ['School']);
                validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName']);
                validateSection('skillsContainer', 'addSkill', ['SkillName']);
            });
        });
    });

    // Färdigheter
    document.getElementById("addSkill").addEventListener("click", function () {
        let container = document.getElementById("skillsContainer");
        let index = container.children.length;
        let newSkill = document.createElement('div');
        newSkill.innerHTML = `
            <div class="input-row">
                <label for="Skills[${index}].SkillName">Färdighet:</label>
                <input name="Skills[${index}].SkillName" id="Skills[${index}].SkillName" onchange="validateSection('skillsContainer', 'addSkill', ['SkillName'])" oninput="validateSection('skillsContainer', 'addSkill', ['SkillName'])" />
                ${createRemoveButton()}
            </div>`;
        container.appendChild(newSkill);

        // Validera direkt när nytt fält lagts till
        validateSection('skillsContainer', 'addSkill', ['SkillName']);
    });

    // Språk
    document.getElementById("addLanguage").addEventListener("click", function () {
        let container = document.getElementById("languagesContainer");
        let index = container.children.length;
        let newLanguage = document.createElement('div');
        newLanguage.innerHTML = `
            <div class="input-row">
                <label for="Languages[${index}].LanguageName">Språk:</label>
                <input name="Languages[${index}].LanguageName" id="Languages[${index}].LanguageName" onchange="validateSection('languagesContainer', 'addLanguage', ['LanguageName', 'Level'])" />
                <label for="Languages[${index}].Level">Nivå (1-5):</label>
                <input name="Languages[${index}].Level" type="number" id="Languages[${index}].Level" min="1" max="5" value="1" />
                 @* <input name="Languages[${index}].Level" type="number" min="1" max="5"/> *@
               @* <input type="text" name="Languages[${index}].Level" id="Languages[${index}].Level" pattern="\d*" onchange="validateSection('languagesContainer', 'addLanguage', ['LanguageName', 'Level'])" /> *@
                ${createRemoveButton()}
            </div>`;
        container.appendChild(newLanguage);
        validateSection('languagesContainer', 'addLanguage', ['LanguageName', 'Level']);
    });

    // Utbildning
    document.getElementById("addEducation").addEventListener("click", function () {
        let container = document.getElementById("educationsContainer");
        let index = container.children.length;
        let newEducation = document.createElement('div');
        newEducation.innerHTML = `
            <div class="input-row">
                <label for="Educations[${index}].School">Skola:</label>
                <input name="Educations[${index}].School" id="Educations[${index}].School" onchange="validateSection('educationsContainer', 'addEducation', ['School', 'Degree', 'FieldOfStudy', 'StartDate', 'EndDate'])" />
                <label for="Educations[${index}].Degree">Examen:</label>
                <input name="Educations[${index}].Degree" id="Educations[${index}].Degree" onchange="validateSection('educationsContainer', 'addEducation', ['School', 'Degree', 'FieldOfStudy', 'StartDate', 'EndDate'])" />
                <label for="Educations[${index}].FieldOfStudy">Ämnesområde:</label>
                <input name="Educations[${index}].FieldOfStudy" id="Educations[${index}].FieldOfStudy" onchange="validateSection('educationsContainer', 'addEducation', ['School', 'Degree', 'FieldOfStudy', 'StartDate', 'EndDate'])" />
                <label for="Educations[${index}].StartDate">Startdatum:</label>
                <input type="date" name="Educations[${index}].StartDate" id="Educations[${index}].StartDate" onchange="validateSection('educationsContainer', 'addEducation', ['School', 'Degree', 'FieldOfStudy', 'StartDate', 'EndDate'])" />
                <label for="Educations[${index}].EndDate">Slutdatum:</label>
                <input type="date" name="Educations[${index}].EndDate" id="Educations[${index}].EndDate" onchange="validateSection('educationsContainer', 'addEducation', ['School', 'Degree', 'FieldOfStudy', 'StartDate', 'EndDate'])" />
                ${createRemoveButton()}
            </div>`;
        container.appendChild(newEducation);
        validateSection('educationsContainer', 'addEducation', ['School', 'Degree', 'FieldOfStudy', 'StartDate', 'EndDate']);
    });

    // Arbetslivserfarenhet
    document.getElementById("addWorkExperience").addEventListener("click", function () {
        let container = document.getElementById("workExperiencesContainer");
        let index = container.children.length;
        let newExperience = document.createElement('div');
        newExperience.innerHTML = `
            <div class="input-row">
                <label for="WorkExperiences[${index}].CompanyName">Företag:</label>
                <input name="WorkExperiences[${index}].CompanyName" id="WorkExperiences[${index}].CompanyName" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName', 'Position', 'Description', 'StartDate', 'EndDate'])" />
                <label for="WorkExperiences[${index}].Position">Position:</label>
                <input name="WorkExperiences[${index}].Position" id="WorkExperiences[${index}].Position" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName', 'Position', 'Description', 'StartDate', 'EndDate'])" />
                <label for="WorkExperiences[${index}].Description">Beskrivning:</label>
                <input name="WorkExperiences[${index}].Description" id="WorkExperiences[${index}].Description" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName', 'Position', 'Description', 'StartDate', 'EndDate'])" />
                <label for="WorkExperiences[${index}].StartDate">Startdatum:</label>
                <input type="date" name="WorkExperiences[${index}].StartDate" id="WorkExperiences[${index}].StartDate" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName', 'Position', 'Description', 'StartDate', 'EndDate'])" />
                <label for="WorkExperiences[${index}].EndDate">Slutdatum:</label>
                <input type="date" name="WorkExperiences[${index}].EndDate" id="WorkExperiences[${index}].EndDate" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName', 'Position', 'Description', 'StartDate', 'EndDate'])" />
                ${createRemoveButton()}
            </div>`;
        container.appendChild(newExperience);
        validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName', 'Position', 'Description', 'StartDate', 'EndDate']);
    });

</script>