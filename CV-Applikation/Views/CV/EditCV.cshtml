@model CV_Applikation.Models.EditCvViewModel

@{
    ViewData["Title"] = "Edit CV";
}

@* <form asp-controller="CV" asp-action="EditCV" method="post" enctype="multipart/form-data"> *@
<form asp-controller="CV" asp-action="EditCV" method="post" enctype="multipart/form-data">
    <input type="hidden" name="CVId" value="@Model.CVId" />

    <h1 class="fw-normal fs-5 mt-2">Redigera CV</h1>

    <!-- CV-namn -->
    <label for="CVName">CV Namn:</label>
    <input asp-for="CVName" id="CVName" />
    <span asp-validation-for="CVName" class="text-danger"></span>
    <br />
    <h3 class="fw-normal fs-5 mt-2">Bild för cv: </h3>
    <input type="file" asp-for="ImagePath" />
    <br />
    <hr />

    <div class="d-flex justify-content-between">

        <div style="width: 48%;">
            <!-- Utbildningar -->
            <h3 class="fw-normal fs-5 mt-2">Utbildningar</h3>
            <div id="educationsContainer">
                @for (int i = 0; i < Model.Educations.Count; i++)
                {
                    <div class="education">
                        <!-- Dolt fält för ID -->
                        <input type="hidden" asp-for="Educations[@i].Id" />

                        <label for="Educations[@i].School">Skola:</label>
                        <input asp-for="Educations[@i].School" id="Educations[@i].School" style="margin-bottom: 15px;" />
                        <span asp-validation-for="Educations[@i].School" class="text-danger"></span>

                        <br />

                        <label for="Educations[@i].Degree">Examen:</label>
                        <input asp-for="Educations[@i].Degree" id="Educations[@i].Degree" style="margin-bottom: 15px;" />
                        <span asp-validation-for="Educations[@i].Degree" class="text-danger"></span>
                        <br />

                        <label for="Educations[@i].FieldOfStudy">Ämnesområde:</label>
                        <input asp-for="Educations[@i].FieldOfStudy" id="Educations[@i].FieldOfStudy" style="margin-bottom: 15px;" />
                        <span asp-validation-for="Educations[@i].FieldOfStudy" class="text-danger"></span>
                        <br />

                        <label for="Educations[@i].StartDate">Startdatum:</label>
                        <input type="date" asp-for="Educations[@i].StartDate" id="Educations[@i].StartDate" style="margin-bottom: 15px;" />
                        <span asp-validation-for="Educations[@i].StartDate" class="text-danger"></span>
                        <br />

                        <label for="Educations[@i].EndDate">Slutdatum:</label>
                        <input type="date" asp-for="Educations[@i].EndDate" id="Educations[@i].EndDate" style="margin-bottom: 15px;" />
                        <span asp-validation-for="Educations[@i].EndDate" class="text-danger"></span>
                        <br />

                    </div>
                }
            </div>
            <button type="button" class="btn" id="addEducation" style="background-color: rgb(255, 167, 38); border-color: rgb(255, 167, 38); color: white;">Lägg till ny utbildning</button>
            <br />

        </div>


        <div style="width: 48%;">
            <!-- Arbetslivserfarenheter -->
            <h3 class="fw-normal fs-5 mt-2">Arbetslivserfarenheter</h3>
            <div id="workExperiencesContainer">
                @for (int i = 0; i < Model.WorkExperiences.Count; i++)
                {
                    <div class="work-experience">
                        <!-- Dolt fält för ID -->
                        <input type="hidden" asp-for="WorkExperiences[@i].Id" style="margin-bottom: 15px;" />

                        <label for="WorkExperiences[@i].CompanyName">Företagsnamn:</label>
                        <input asp-for="WorkExperiences[@i].CompanyName" id="WorkExperiences[@i].CompanyName" style="margin-bottom: 15px;" />
                        <span asp-validation-for="WorkExperiences[@i].CompanyName" class="text-danger"></span>
                        <br />

                        <label for="WorkExperiences[@i].Position">Position:</label>
                        <input asp-for="WorkExperiences[@i].Position" id="WorkExperiences[@i].Position" style="margin-bottom: 15px;" />
                        <span asp-validation-for="WorkExperiences[@i].Position" class="text-danger"></span>
                        <br />

                        <label for="WorkExperiences[@i].Description">Beskrivning:</label>
                        <textarea asp-for="WorkExperiences[@i].Description" id="WorkExperiences[@i].Description" style="margin-bottom: 15px;"></textarea>
                        <span asp-validation-for="WorkExperiences[@i].Description" class="text-danger"></span>
                        <br />

                        <label for="WorkExperiences[@i].StartDate">Startdatum:</label>
                        <input type="date" asp-for="WorkExperiences[@i].StartDate" id="WorkExperiences[@i].StartDate" style="margin-bottom: 15px;" />
                        <span asp-validation-for="WorkExperiences[@i].StartDate" class="text-danger"></span>
                        <br />

                        <label for="WorkExperiences[@i].EndDate">Slutdatum:</label>
                        <input type="date" asp-for="WorkExperiences[@i].EndDate" id="WorkExperiences[@i].EndDate" style="margin-bottom: 15px;" />
                        <span asp-validation-for="WorkExperiences[@i].EndDate" class="text-danger"></span>
                        <br />

                    </div>
                }
            </div>
            <button type="button" class="btn" id="addWorkExperience" style="background-color: rgb(255, 167, 38); border-color: rgb(255, 167, 38); color: white;" style="margin-bottom: 15px;">Lägg till ny arbetslivserfarenhet</button>
            <br />

        </div>


    </div>

    <div class="d-flex justify-content-between">
        <div style="width: 48%;">
            <!-- Språk -->
            <h3 class="fw-normal fs-5 mt-2">Språk</h3>
            <div id="languagesContainer">
                @for (int i = 0; i < Model.Languages.Count; i++)
                {
                    <div class="language">
                        <!-- Dolt fält för ID -->
                        <input type="hidden" asp-for="Languages[@i].Id" />

                        <label for="Languages[@i].LanguageName">Språk:</label>
                        <input asp-for="Languages[@i].LanguageName" id="Languages[@i].LanguageName" style="margin-bottom: 15px;" />
                        <span asp-validation-for="Languages[@i].LanguageName" class="text-danger"></span>
                        <br />

                        <label for="Languages[@i].Level">Nivå:</label>
                        <input asp-for="Languages[@i].Level" id="Languages[@i].Level" type="number" min="1" max="5" style="margin-bottom: 15px;" />
                        <span asp-validation-for="Languages[@i].Level" class="text-danger"></span>
                        <br />

                    </div>
                }
            </div>
            <button type="button" class="btn" id="addLanguage" style="background-color: rgb(255, 167, 38); border-color: rgb(255, 167, 38); color: white;" style="margin-bottom: 15px;">Lägg till nytt språk</button>
            <br />

        </div>

        <div style="width: 48%;">
            <!-- Färdigheter -->
            <h3 class="fw-normal fs-5 mt-2">Färdigheter</h3>
            <div id="skillsContainer">
                @for (int i = 0; i < Model.Skills.Count; i++)
                {
                    <div class="skill">
                        <!-- Dolt fält för ID -->
                        <input type="hidden" asp-for="Skills[@i].Id" />

                        <label for="Skills[@i].SkillName">Färdighet:</label>
                        <input asp-for="Skills[@i].SkillName" id="Skills[@i].SkillName" style="margin-bottom: 15px;" />
                        <span asp-validation-for="Skills[@i].SkillName" class="text-danger"></span>
                        <br />

                    </div>
                }
            </div>
            <button type="button" class="btn" id="addSkill" style="background-color: rgb(255, 167, 38); border-color: rgb(255, 167, 38); color: white;" style="margin-bottom: 15px;">Lägg till ny färdighet</button>
            <br />
            <!-- Submit -->
            <button type="submit" class="btn" style="background-color: rgb(255, 167, 38); border-color: rgb(255, 167, 38); color: white; float: right;" style="margin-bottom: 15px;">Spara ändringar</button>

        </div>
    </div>



</form>

<script>
    function hasValue(value) {
        return value != null && value.trim() !== '';
    }

    function validateSection(containerId, addButtonId, requiredFields = []) {
        const container = document.getElementById(containerId);
        const sections = container.children;
        const addButton = document.getElementById(addButtonId);

        if (sections.length > 0) {
            const lastSection = sections[sections.length - 1];
            const inputs = lastSection.getElementsByTagName('input');

            // Om requiredFields är tom, kontrollera alla fält
            const fieldsToCheck = requiredFields.length > 0 ?
                Array.from(inputs).filter(input => requiredFields.some(field => input.id.includes(field))) :
                Array.from(inputs);

            const allFieldsHaveValue = fieldsToCheck.every(input => hasValue(input.value));
            addButton.disabled = !allFieldsHaveValue;
        }
    }

    function createRemoveButton() {
        return `<button type="button" class="remove-button" onclick="removeSection(this)">Ta bort</button>`;
    }

    function removeSection(button) {
        const section = button.closest('div');
        const container = section.parentElement;
        const addButtonId = container.id.replace('Container', '');
        section.remove();
        validateSection(container.id, 'add' + addButtonId);
    }

    // Språk
    document.getElementById("addLanguage").addEventListener("click", function () {
        let container = document.getElementById("languagesContainer");
        let index = container.children.length;
        let newLanguage = document.createElement('div');
        newLanguage.innerHTML = `
        <div class="input-row">
            <label for="Languages[${index}].LanguageName">Språk:</label>
            <input name="Languages[${index}].LanguageName" id="Languages[${index}].LanguageName" onchange="validateSection('languagesContainer', 'addLanguage', ['LanguageName', 'Level'])" />
            <label for="Languages[${index}].Level">Nivå (1-5):</label>
            <input type="number" min="1" max="5" name="Languages[${index}].Level" id="Languages[${index}].Level" onchange="validateSection('languagesContainer', 'addLanguage', ['LanguageName', 'Level'])" />
            ${createRemoveButton()}
        </div>`;
        container.appendChild(newLanguage);
        document.getElementById('addLanguage').disabled = true;

    });

    // Utbildning
    document.getElementById("addEducation").addEventListener("click", function () {
        let container = document.getElementById("educationsContainer");
        let index = container.children.length;
        let newEducation = document.createElement('div');
        newEducation.innerHTML = `
        <div class="input-row">
            <label for="Educations[${index}].School">Skola:</label>
            <input name="Educations[${index}].School" id="Educations[${index}].School" onchange="validateSection('educationsContainer', 'addEducation', ['School', 'Degree', 'FieldOfStudy', 'StartDate', 'EndDate'])" />
            <label for="Educations[${index}].Degree">Examen:</label>
            <input name="Educations[${index}].Degree" id="Educations[${index}].Degree" onchange="validateSection('educationsContainer', 'addEducation', ['School', 'Degree', 'FieldOfStudy', 'StartDate', 'EndDate'])" />
            <label for="Educations[${index}].FieldOfStudy">Ämnesområde:</label>
            <input name="Educations[${index}].FieldOfStudy" id="Educations[${index}].FieldOfStudy" onchange="validateSection('educationsContainer', 'addEducation', ['School', 'Degree', 'FieldOfStudy', 'StartDate', 'EndDate'])" />
            <label for="Educations[${index}].StartDate">Startdatum:</label>
            <input type="date" name="Educations[${index}].StartDate" id="Educations[${index}].StartDate" onchange="validateSection('educationsContainer', 'addEducation', ['School', 'Degree', 'FieldOfStudy', 'StartDate', 'EndDate'])" />
            <label for="Educations[${index}].EndDate">Slutdatum:</label>
            <input type="date" name="Educations[${index}].EndDate" id="Educations[${index}].EndDate" onchange="validateSection('educationsContainer', 'addEducation', ['School', 'Degree', 'FieldOfStudy', 'StartDate', 'EndDate'])" />
            ${createRemoveButton()}
        </div>`;
        container.appendChild(newEducation);
        document.getElementById('addEducation').disabled = true;
    });

    // Arbetslivserfarenhet
    document.getElementById("addWorkExperience").addEventListener("click", function () {
        let container = document.getElementById("workExperiencesContainer");
        let index = container.children.length;
        let newExperience = document.createElement('div');
        newExperience.innerHTML = `
        <div class="input-row">
            <label for="WorkExperiences[${index}].CompanyName">Företag:</label>
            <input name="WorkExperiences[${index}].CompanyName" id="WorkExperiences[${index}].CompanyName" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName', 'Position', 'Description', 'StartDate', 'EndDate'])" />
            <label for="WorkExperiences[${index}].Position">Position:</label>
            <input name="WorkExperiences[${index}].Position" id="WorkExperiences[${index}].Position" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName', 'Position', 'Description', 'StartDate', 'EndDate'])" />
            <label for="WorkExperiences[${index}].Description">Beskrivning:</label>
            <input name="WorkExperiences[${index}].Description" id="WorkExperiences[${index}].Description" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName', 'Position', 'Description', 'StartDate', 'EndDate'])" />
            <label for="WorkExperiences[${index}].StartDate">Startdatum:</label>
            <input type="date" name="WorkExperiences[${index}].StartDate" id="WorkExperiences[${index}].StartDate" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName', 'Position', 'Description', 'StartDate', 'EndDate'])" />
            <label for="WorkExperiences[${index}].EndDate">Slutdatum:</label>
            <input type="date" name="WorkExperiences[${index}].EndDate" id="WorkExperiences[${index}].EndDate" onchange="validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName', 'Position', 'Description', 'StartDate', 'EndDate'])" />
            ${createRemoveButton()}
        </div>`;
        container.appendChild(newExperience);
        document.getElementById('addWorkExperience').disabled = true;
    });

    // Färdigheter
    document.getElementById("addSkill").addEventListener("click", function () {
        let container = document.getElementById("skillsContainer");
        let index = container.children.length;
        let newSkill = document.createElement('div');
        newSkill.innerHTML = `
        <div class="input-row">
            <label for="Skills[${index}].SkillName">Färdighet:</label>
            <input name="Skills[${index}].SkillName" id="Skills[${index}].SkillName" onchange="validateSection('skillsContainer', 'addSkill', ['SkillName'])" />
            ${createRemoveButton()}
        </div>`;
        container.appendChild(newSkill);
        document.getElementById('addSkill').disabled = true;
    });

    // Initiera validering för alla sektioner vid start
    document.addEventListener('DOMContentLoaded', function() {
        validateSection('languagesContainer', 'addLanguage', ['LanguageName']);
        validateSection('educationsContainer', 'addEducation', ['School']);
        validateSection('workExperiencesContainer', 'addWorkExperience', ['CompanyName']);
        validateSection('skillsContainer', 'addSkill', ['SkillName']);
    });
</script>
